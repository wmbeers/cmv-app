.newFeatureDijit .listdbootstrapFix {
    padding: 0 0 0 25px;
}

.newFeatureDijit .newFeatureContainer {
    padding: 0;
}

.floatingWidget .newFeatureDijit .newFeatureContainer {
    padding: 5px;
}

.newFeatureDijit .newFeatureNode {
    height: 320px;
    width: 350px;
}

.newFeatureDijit .newFeatureTabContainer {
    height: 100%;
    width: 100%;
}

.arcgisSearch .searchGroup .searchInput {
    width: 220px;
}

.aoiList {
    border-collapse: collapse;
    width: 100%;
}

.aoiList tr:nth-child(even) {
    background-color: #f2f2f2;
}

.aoiList td {
    vertical-align: middle;
}

/* Applied to the Type column in feature list when sorted by by geometry type to make it wide enough to prevent wrapping the sort caret */
.type-sort {
    min-width: 56px;
}

.aoiList input {
    padding: 3px 0;
}

/* Resets styling of select element defined in flat.css */
.aoiList select {
    padding: 4px 0;
    border: 1px solid #9e9e9e;
    -webkit-box-shadow: none;
    box-shadow: none;
}

.feature-selected {
    background-color: lightcyan !important;
}

.aoiList th {
    white-space: nowrap;
}

#aoi-name-label {
    margin-top: 10px;
    margin-right: 20px;
    margin-bottom: 10px;
    font-weight: bold;
}

.buttonContainerRight {
    text-align: right;
}

.buttonContainerFull {
    display: flex;
    justify-content: space-between;
}

.right .dijitButtonText {
    padding: 0 0 0 4px;
}

.dijitJqDatepicker {
    width: 90% !important;
}

.dijitJqDatepickerValidation {
    position: relative;
    top: 4px;
    right: -10px;
}

fieldset.borderless {
    margin: 0;
    padding: 0;
    border: none;
}

div.helpLinks {
    padding-top: 10px;
}

div.helpLinks a {
    text-decoration: underline;
}

div.helpLinks ul {
    padding-top: 2px;
    margin-top: 0;
    padding-left: 20px;
}

ul.no-margin {
    margin-top: 0;
    margin-left: 0;
    padding-left: 18px;
}

/* mimics Dojo ValidationTextBox for a standard HTML input, to facilitate binding to KnockOut observables used on feature editor
    (DoJo ValidationTextBox is rendered as a very complex chunk of html replacing the actual input, with hidden inputs and such
    that are too hard to replicate, and we can't use these on dynmanically created inputs such as those in a template bound to 
    a KO observableArray)
    TODO move this to app.css so it can be shared with project editor
*/
/*the trinagle-exclamation icon itself*/
.validationIcon {
    /* from flat.css .dijitValidationContainer TODO trim this down to just what we need */
    color: #dd2c00;
    width: 18px;
    font-family: "Font Awesome\ 5 Free";
    speak: none;
    font-style: normal;
    font-weight: 900;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    font-size: 15px;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    /*overridden by .validationWrapper .validationIcon selector below */
    position: relative;
    float: right;
    /*top: 6px;*/
    padding-right: 1px; /* keeps it lined up vertically with icons shown over inputs*/
}
input.invalid { /*not using :invalid pseudo-selector with required attribute; it has limitations, so we assign this class via ko */
    /* padding-right: 20px; add this if we want to use it for duplicate names, it will prevent the text from being under the icon floating over the input*/
    border: 1px solid red;
}

/*For the editable version of a row, put this class on the td*/
.validationWrapper {
    position: relative;
}
    .validationWrapper input {
        width: 100%; /*overrides dijitTextBox width 15em from flat.css*/
    }

input.invalid { /*not using the ":invalid" pseudo-selector with required attribute; it has limitations, so we assign this class via ko */
    /* padding-right: 20px; add this if we want to use it for duplicate names, it will prevent the text from being under the icon floating over the input*/
    border: 1px solid red;
}

.validationWrapper .validationIcon {
    position: absolute;
    right: 4px;
    top: 9px;
    padding-right: 0;
}

    .validationIcon::before {
        content: "\f071";
    }

/* hide number spinners and set the width of buffer distance inputs */
input.bufferDistanceInput {
    width: 3em;
    /*hide number spinner in firefox, see also next item*/
    -moz-appearance: textfield;
}

    /* hide number spinner in Chrome, Safari, Edge, Opera */
    input.bufferDistanceInput::-webkit-outer-spin-button,
    input.bufferDistanceInput::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
